<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <joint name='imu_joint' type='fixed'>
        <parent>base_link</parent>
        <child>imu_link</child>
        <pose relative_to="base_link">0.0 0.0 0.01 0 0 0</pose>
    </joint>

    <link name='imu_link'>
        <pose relative_to="imu_joint"/>
        <visual name="imu_link_visual">
            <geometry>
                <box><size>
                    0.1 0.1 0.1
                </size></box>
            </geometry>
        </visual>

        <collision name="imu_link_collision">
            <geometry>
                <box><size>
                    0.1 0.1 0.1
                </size></box>
            </geometry>
        </collision>

        <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>

        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>demo/imu</topic>
            <gz_frame_id>imu_link</gz_frame_id>
            <imu>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>2e-4</stddev>
                            <bias_mean>0.0000075</bias_mean>
                            <bias_stddev>0.0000008</bias_stddev>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0.0</mean>
                            <stddev>1.7e-2</stddev>
                            <bias_mean>0.1</bias_mean>
                            <bias_stddev>0.001</bias_stddev>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </link>

    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
        <!-- wheels -->
        <left_joint>drivewhl_l_joint</left_joint>
        <right_joint>drivewhl_r_joint</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.4</wheel_separation>
        <wheel_radius>0.2</wheel_radius>

        <!-- limits -->
        <max_linear_acceleration>0.1</max_linear_acceleration>

        <!-- input -->
        <topic>/demo/cmd_vel</topic>

        <!-- output -->
        <odom_topic>/demo/odom</odom_topic>
        <tf_topic>/tf</tf_topic>

        <frame_id>odom</frame_id>
        <child_frame_id>base_link</child_frame_id>
    </plugin>

    <plugin
        filename="gz-sim-joint-state-publisher-system"
        name="gz::sim::systems::JointStatePublisher">
        <topic>joint_states</topic>
    </plugin>

</robot>